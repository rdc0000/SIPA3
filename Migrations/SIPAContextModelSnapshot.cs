// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace SIPA.Migrations
{
    [DbContext(typeof(SIPAContext))]
    partial class SIPAContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SIPA.Models.Articulo", b =>
                {
                    b.Property<int>("ArticuloID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad");

                    b.Property<string>("Imagen");

                    b.Property<string>("Nombre");

                    b.Property<int>("PrecioProveedor");

                    b.Property<int>("PrecioVenta");

                    b.Property<int>("ProveedorID");

                    b.Property<string>("TipoProducto");

                    b.HasKey("ArticuloID");

                    b.HasIndex("ProveedorID");

                    b.ToTable("Articulo");
                });

            modelBuilder.Entity("SIPA.Models.Autoservicio", b =>
                {
                    b.Property<int>("AutoservicioID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .IsRequired();

                    b.Property<bool>("Estado");

                    b.Property<string>("Imagen");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Telefono")
                        .IsRequired();

                    b.HasKey("AutoservicioID");

                    b.ToTable("Autoservicio");
                });

            modelBuilder.Entity("SIPA.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Direccion")
                        .IsRequired();

                    b.Property<string>("Documento")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Telefono")
                        .IsRequired();

                    b.HasKey("ClienteID");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("SIPA.Models.DetallePedido", b =>
                {
                    b.Property<int>("DetallePedidoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticuloID");

                    b.Property<int>("Cantidad");

                    b.Property<int>("PedidoID");

                    b.Property<int>("Precio");

                    b.HasKey("DetallePedidoID");

                    b.HasIndex("ArticuloID");

                    b.HasIndex("PedidoID");

                    b.ToTable("DetallePedido");
                });

            modelBuilder.Entity("SIPA.Models.Domicilio", b =>
                {
                    b.Property<int>("DomicilioID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("HoraFecha");

                    b.Property<int>("TransporteID");

                    b.HasKey("DomicilioID");

                    b.HasIndex("TransporteID");

                    b.ToTable("Domicilio");
                });

            modelBuilder.Entity("SIPA.Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Cargo")
                        .IsRequired();

                    b.Property<string>("Documento")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Telefono")
                        .IsRequired();

                    b.HasKey("EmpleadoID");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("SIPA.Models.MetodoPago", b =>
                {
                    b.Property<int>("MetodoPagoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<string>("NumeroReferencia")
                        .IsRequired();

                    b.HasKey("MetodoPagoID");

                    b.ToTable("MetodoPago");
                });

            modelBuilder.Entity("SIPA.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AutoservicioID");

                    b.Property<int>("ClienteID");

                    b.Property<string>("Direccion");

                    b.Property<int>("DomicilioID");

                    b.Property<int>("EmpleadoID");

                    b.Property<DateTime>("FechaHora");

                    b.Property<int>("MetodoPagoID");

                    b.Property<int>("Total");

                    b.HasKey("PedidoID");

                    b.HasIndex("AutoservicioID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("DomicilioID");

                    b.HasIndex("EmpleadoID");

                    b.HasIndex("MetodoPagoID");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("SIPA.Models.Proveedor", b =>
                {
                    b.Property<int>("ProveedorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<string>("Telefono")
                        .IsRequired();

                    b.HasKey("ProveedorID");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("SIPA.Models.Transporte", b =>
                {
                    b.Property<int>("TransporteID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<bool>("Estado");

                    b.Property<string>("Marca");

                    b.Property<string>("Placa");

                    b.Property<string>("TipoVehiculo");

                    b.HasKey("TransporteID");

                    b.ToTable("Transporte");
                });

            modelBuilder.Entity("SIPA.Models.Articulo", b =>
                {
                    b.HasOne("SIPA.Models.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIPA.Models.DetallePedido", b =>
                {
                    b.HasOne("SIPA.Models.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("ArticuloID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIPA.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIPA.Models.Domicilio", b =>
                {
                    b.HasOne("SIPA.Models.Transporte", "Transporte")
                        .WithMany()
                        .HasForeignKey("TransporteID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIPA.Models.Pedido", b =>
                {
                    b.HasOne("SIPA.Models.Autoservicio", "Autoservicio")
                        .WithMany()
                        .HasForeignKey("AutoservicioID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIPA.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIPA.Models.Domicilio", "Domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIPA.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIPA.Models.MetodoPago", "MetodoPago")
                        .WithMany()
                        .HasForeignKey("MetodoPagoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
